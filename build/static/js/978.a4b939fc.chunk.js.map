{"version":3,"file":"static/js/978.a4b939fc.chunk.js","mappings":"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","sources":["pages/Changepassword.jsx"],"sourcesContent":["// import axios from \"axios\";\r\n// import { useState } from \"react\";\r\n// import { ToastContainer, toast } from \"react-toastify\";\r\n// import \"react-toastify/dist/ReactToastify.css\"; // Ensure you import the CSS for toastify\r\n// export default function Changepassword() {\r\n//     const currentuser = JSON?.parse(localStorage?.getItem(\"data123\"));\r\n//     const [data, setData] = useState({\r\n//         oldpassword: \"\",\r\n//         newpassword: \"\",\r\n//         confirmpassword: \"\",\r\n//         id: currentuser?.id\r\n//     });\r\n//     const [errors, setErrors] = useState({});\r\n//     const handleChange = (e) => {\r\n//         const { name, value } = e.target;\r\n//         setData({ ...data, [name]: value });\r\n//         setErrors({ ...errors, [name]: \"\" });\r\n//     };\r\n//     const handleValidate = () => {\r\n//         let newErrors = {};\r\n//         let isValid = true;\r\n//         if (!data.oldpassword) {\r\n//             newErrors.oldpassword = \"Old password is required\";\r\n//             isValid = false;\r\n//         }\r\n//         if (!data.newpassword) {\r\n//             newErrors.newpassword = \"New password is required\";\r\n//             isValid = false;\r\n//         }\r\n//         if (!data.confirmpassword) {\r\n//             newErrors.confirmpassword = \"Confirm password is required\";\r\n//             isValid = false;\r\n//         }\r\n//         if (data.newpassword !== data.confirmpassword) {\r\n//             newErrors.passwordMatch = \"Passwords do not match\";\r\n//             isValid = false;\r\n//         }\r\n//         setErrors(newErrors);\r\n//         if (!isValid) {\r\n//             if (newErrors.oldpassword) {\r\n//                 toast.error(newErrors.oldpassword);\r\n//             } else if (newErrors.newpassword) {\r\n//                 toast.error(newErrors.newpassword);\r\n//             } else if (newErrors.confirmpassword) {\r\n//                 toast.error(newErrors.confirmpassword);\r\n//             } else if (newErrors.passwordMatch) {\r\n//                 toast.error(newErrors.passwordMatch);\r\n//             }\r\n//         }\r\n//         return isValid;\r\n//     };\r\n//     const handleClick = () => {\r\n//         if (handleValidate()) {\r\n//             apiHit();\r\n//         }\r\n//     };\r\n//     const apiHit = () => {\r\n//         axios.post(`${process.env.REACT_APP_BASE_URL}change-password`, data).then((response) => {\r\n//             if (response.status === 200) {\r\n//                 toast.success(response.data.message);\r\n//                 setData({\r\n//                     id: currentuser?.id,\r\n//                     oldpassword: \"\",\r\n//                     newpassword: \"\",\r\n//                     confirmpassword: \"\",\r\n//                 });\r\n//             } else {\r\n//                 toast.error(response.data.message);\r\n//             }\r\n//         }).catch((error) => {\r\n//             toast.error(error.response?.data?.message || \"An error occurred\");\r\n//         });\r\n//     };\r\n//     return (\r\n//         <>\r\n//             <div className=\"wpWrapper\">\r\n//                 <div className=\"container-fluid\">\r\n//                     <div className=\"card\">\r\n//                         <div className=\"card-body\">\r\n//                             <div className=\"row\">\r\n//                                 <div className=\"col-12\">\r\n//                                     <h4 className=\"freight_hd\">Change Password</h4>\r\n                                    \r\n//                                 </div>\r\n//                             </div>\r\n//                             <div className=\"row mt-2 py-2\">\r\n//                                 <div className=\"col-lg-6\">\r\n//                                     <div className=\"form-floating mb-3\">\r\n//                                         <input\r\n//                                             type=\"password\"\r\n//                                             onChange={handleChange}\r\n//                                             name=\"oldpassword\"\r\n//                                             className={`form-control px-3 ${errors.oldpassword ? \"is-invalid\" : \"\"}`}\r\n//                                             id=\"floatingInput\"\r\n//                                             placeholder=\"Old Password\"\r\n//                                             value={data.oldpassword}\r\n//                                         />\r\n//                                         <label htmlFor=\"floatingInput\" className=\"px-3\">Old Password</label>\r\n//                                         {errors.oldpassword && (\r\n//                                             <div className=\"invalid-feedback\">{errors.oldpassword}</div>\r\n//                                         )}\r\n//                                     </div>\r\n//                                     <div className=\"form-floating mb-3\">\r\n//                                         <input\r\n//                                             type=\"password\"\r\n//                                             onChange={handleChange}\r\n//                                             name=\"newpassword\"\r\n//                                             className={`form-control px-3 ${errors.newpassword ? \"is-invalid\" : \"\"}`}\r\n//                                             id=\"floatingPassword\"\r\n//                                             placeholder=\"New Password\"\r\n//                                             value={data.newpassword}\r\n//                                         />\r\n//                                         <label htmlFor=\"floatingPassword\" className=\"px-3\">New Password</label>\r\n//                                         {errors.newpassword && (\r\n//                                             <div className=\"invalid-feedback\">{errors.newpassword}</div>\r\n//                                         )}\r\n//                                     </div>\r\n//                                     <div className=\"form-floating mb-3\">\r\n//                                         <input\r\n//                                             type=\"password\"\r\n//                                             onChange={handleChange}\r\n//                                             name=\"confirmpassword\"\r\n//                                             className={`form-control px-3 ${errors.confirmpassword ? \"is-invalid\" : \"\"}`}\r\n//                                             id=\"floatingPassword1\"\r\n//                                             placeholder=\"Confirm Password\"\r\n//                                             value={data.confirmpassword}\r\n//                                         />\r\n//                                         <label htmlFor=\"floatingPassword1\" className=\"px-3\">Confirm Password</label>\r\n//                                         {errors.confirmpassword && (\r\n//                                             <div className=\"invalid-feedback\">{errors.confirmpassword}</div>\r\n//                                         )}\r\n//                                         {errors.passwordMatch && (\r\n//                                             <div className=\"invalid-feedback\">{errors.passwordMatch}</div>\r\n//                                         )}\r\n//                                     </div>\r\n//                                     <button\r\n//                                         className=\"btn text-white mt-2\"\r\n//                                         style={{ backgroundColor: \"#1b2245\" }}\r\n//                                         onClick={handleClick}\r\n//                                     >\r\n//                                         Change Password\r\n//                                     </button>\r\n//                                 </div>\r\n//                             </div>\r\n//                         </div>\r\n//                     </div>\r\n//                 </div>\r\n//                 <ToastContainer />\r\n//             </div>\r\n//         </>\r\n//     );\r\n// }\r\nimport axios from \"axios\";\r\nimport { useState } from \"react\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\"; // Ensure you import the CSS for toastify\r\nexport default function Changepassword() {\r\n  const currentuser = JSON?.parse(localStorage?.getItem(\"data123\"));\r\n  const [data, setData] = useState({\r\n    oldpassword: \"\",\r\n    newpassword: \"\",\r\n    confirmpassword: \"\",\r\n    id: currentuser?.id,\r\n  });\r\n  const [errors, setErrors] = useState({});\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setData({ ...data, [name]: value });\r\n    setErrors({ ...errors, [name]: \"\" });\r\n  };\r\n  const handleValidate = () => {\r\n    let newErrors = {};\r\n    let isValid = true;\r\n    if (!data.oldpassword) {\r\n      newErrors.oldpassword = \"Old password is required\";\r\n      isValid = false;\r\n    }\r\n    if (!data.newpassword) {\r\n      newErrors.newpassword = \"New password is required\";\r\n      isValid = false;\r\n    }\r\n    if (!data.confirmpassword) {\r\n      newErrors.confirmpassword = \"Confirm password is required\";\r\n      isValid = false;\r\n    }\r\n    if (data.newpassword !== data.confirmpassword) {\r\n      newErrors.passwordMatch = \"Passwords do not match\";\r\n      isValid = false;\r\n    }\r\n    setErrors(newErrors);\r\n    if (!isValid) {\r\n      if (newErrors.oldpassword) {\r\n        toast.error(newErrors.oldpassword);\r\n      } else if (newErrors.newpassword) {\r\n        toast.error(newErrors.newpassword);\r\n      } else if (newErrors.confirmpassword) {\r\n        toast.error(newErrors.confirmpassword);\r\n      } else if (newErrors.passwordMatch) {\r\n        toast.error(newErrors.passwordMatch);\r\n      }\r\n    }\r\n    return isValid;\r\n  };\r\n  const handleClick = () => {\r\n    if (handleValidate()) {\r\n      apiHit();\r\n    }\r\n  };\r\n  const apiHit = () => {\r\n    axios\r\n      .post(`${process.env.REACT_APP_BASE_URL}change-password`, data)\r\n      .then((response) => {\r\n        if (response.status === 200) {\r\n          toast.success(response.data.message);\r\n          setData({\r\n            id: currentuser?.id,\r\n            oldpassword: \"\",\r\n            newpassword: \"\",\r\n            confirmpassword: \"\",\r\n          });\r\n        } else {\r\n          toast.error(response.data.message);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        toast.error(error.response?.data?.message || \"An error occurred\");\r\n      });\r\n  };\r\n  return (\r\n    <>\r\n      <div className=\"wpWrapper\">\r\n        <div className=\"container-fluid\">\r\n             <div className=\"row mb-4\">\r\n                <div className=\"col-12\">\r\n                  <h4 className=\"freight_hd\">Change Password</h4>\r\n                </div>\r\n              </div>\r\n          <div className=\"card\">\r\n            <div className=\"card-body\">\r\n             \r\n              <div className=\"row py-2 changePassForm\">\r\n                <div className=\"col-lg-6\">\r\n                  <div className=\"mb-3\">\r\n                    <label htmlFor=\"floatingInput\" className=\"px-3\">\r\n                      Old Password\r\n                    </label>\r\n                    <input\r\n                      type=\"password\"\r\n                      onChange={handleChange}\r\n                      name=\"oldpassword\"\r\n                      className={`form-control px-3 ${\r\n                        errors.oldpassword ? \"is-invalid\" : \"\"\r\n                      }`}\r\n                      id=\"floatingInput\"\r\n                      placeholder=\"Old Password\"\r\n                      value={data.oldpassword}\r\n                    />\r\n\r\n                    {errors.oldpassword && (\r\n                      <div className=\"invalid-feedback\">\r\n                        {errors.oldpassword}\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                  <div className=\"  mb-3\">\r\n                    <label htmlFor=\"floatingPassword\" className=\"px-3\">\r\n                      New Password\r\n                    </label>\r\n                    <input\r\n                      type=\"password\"\r\n                      onChange={handleChange}\r\n                      name=\"newpassword\"\r\n                      className={`form-control px-3 ${\r\n                        errors.newpassword ? \"is-invalid\" : \"\"\r\n                      }`}\r\n                      id=\"floatingPassword\"\r\n                      placeholder=\"New Password\"\r\n                      value={data.newpassword}\r\n                    />\r\n\r\n                    {errors.newpassword && (\r\n                      <div className=\"invalid-feedback\">\r\n                        {errors.newpassword}\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                  <div className=\"mb-3\">\r\n                    <label htmlFor=\"floatingPassword1\" className=\"px-3\">\r\n                      Confirm Password\r\n                    </label>\r\n                    <input\r\n                      type=\"password\"\r\n                      onChange={handleChange}\r\n                      name=\"confirmpassword\"\r\n                      className={`form-control px-3 ${\r\n                        errors.confirmpassword ? \"is-invalid\" : \"\"\r\n                      }`}\r\n                      id=\"floatingPassword1\"\r\n                      placeholder=\"Confirm Password\"\r\n                      value={data.confirmpassword}\r\n                    />\r\n\r\n                    {errors.confirmpassword && (\r\n                      <div className=\"invalid-feedback\">\r\n                        {errors.confirmpassword}\r\n                      </div>\r\n                    )}\r\n                    {errors.passwordMatch && (\r\n                      <div className=\"invalid-feedback\">\r\n                        {errors.passwordMatch}\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                  <button\r\n                    className=\"btn text-white mt-2\"\r\n                    style={{ backgroundColor: \"#1b2245\" }}\r\n                    onClick={handleClick}\r\n                  >\r\n                    Change Password\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <ToastContainer />\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n"],"names":["Changepassword","_localStorage","currentuser","JSON","parse","localStorage","getItem","data","setData","useState","oldpassword","newpassword","confirmpassword","id","errors","setErrors","handleChange","e","name","value","target","apiHit","axios","post","concat","process","then","response","status","toast","success","message","error","catch","_error$response","_error$response$data","_jsx","_Fragment","children","_jsxs","className","htmlFor","type","onChange","placeholder","passwordMatch","style","backgroundColor","onClick","handleClick","handleValidate","newErrors","isValid","ToastContainer"],"sourceRoot":""}