{"version":3,"file":"static/js/172.5ecc9c2f.chunk.js","mappings":"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","sources":["pages/ManageStaff.jsx"],"sourcesContent":["import OutlinedInput from \"@mui/material/OutlinedInput\";\r\nimport InputLabel from \"@mui/material/InputLabel\";\r\nimport MenuItem from \"@mui/material/MenuItem\";\r\nimport FormControl from \"@mui/material/FormControl\";\r\nimport ListItemText from \"@mui/material/ListItemText\";\r\nimport Select from \"@mui/material/Select\";\r\nimport axios from \"axios\";\r\nimport Checkbox from \"@mui/material/Checkbox\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { AiFillDelete } from \"react-icons/ai\";\r\nimport { toast, ToastContainer } from \"react-toastify\";\r\nimport Swal from \"sweetalert2\";\r\nimport { Box, Button, Modal } from \"@mui/material\";\r\nimport { FaEdit } from \"react-icons/fa\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nconst pageSize = 10;\r\nconst ITEM_HEIGHT = 48;\r\nconst ITEM_PADDING_TOP = 8;\r\nconst MenuProps = {\r\n  PaperProps: {\r\n    style: {\r\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\r\n      width: 250,\r\n    },\r\n  },\r\n};\r\nexport default function ManageStaff() {\r\n  const [isChecked, setIsChecked] = useState(true);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [inputdata, setInputdata] = useState([]);\r\n  const [error, setError] = useState({});\r\n  const [loader,setLoader]=useState(false)\r\n  const [selectedRoles, setSelectedRoles] = useState([]);\r\n  const [isModalOpen2, setIsModalOpen2] = useState(false);\r\n  const [input, setInput] = useState({\r\n    staff_email: \"\",\r\n    staff_name: \"\",\r\n    new_password: \"\",\r\n  });\r\n  const [searchQuery, setSearchQuery] = useState(\"\");\r\n  const [isModalOpen, setIsModalOpen] = useState(false);\r\n  const [data, setData] = React.useState([]);\r\n  const navigate = useNavigate()\r\n  const filterdata = data?.filter((item) => {\r\n    return (\r\n      item?.email?.toLowerCase()?.includes(searchQuery?.toLowerCase()) ||\r\n      item?.full_name?.toLowerCase()?.includes(searchQuery?.toLowerCase()) ||\r\n      item?.staff_name?.toLowerCase()?.includes(searchQuery?.toLowerCase())\r\n    );\r\n  });\r\n  const totalPages = Math.ceil(filterdata.length / pageSize);\r\n  const startIndex = (currentPage - 1) * pageSize;\r\n  const endIndex = startIndex + pageSize;\r\n  const currentData = filterdata.slice(startIndex, endIndex);\r\n  const getdata = () => {\r\n    setLoader(true)\r\n    axios\r\n      .get(`${process.env.REACT_APP_BASE_URL}staff-list`)\r\n      .then((response) => {\r\n        setLoader(false)\r\n        setData(response.data.data);\r\n      })\r\n      .catch((error) => {\r\n        setLoader(false)\r\n        console.log(error.response);\r\n      });\r\n  };\r\n  const handlePageChange = (page) => {\r\n    setCurrentPage(page);\r\n  };\r\n  useEffect(() => {\r\n    getdata();\r\n  }, []);\r\n  const handlechange = (e) => {\r\n    const { name, value } = e.target;\r\n    setInput((prevState) => ({\r\n      ...prevState,\r\n      [name]: value,\r\n    }));\r\n  };\r\n  const handleToggle = (id) => {\r\n    const updatedData = data.map((item) =>\r\n      item.id === id ? { ...item, status: 1 - item.status } : item\r\n    );\r\n    setData(updatedData);\r\n  };\r\n  const handlelcicckac = (id) => {\r\n    axios\r\n      .post(`${process.env.REACT_APP_BASE_URL}change-status`, {\r\n        user_id: id,\r\n      })\r\n      .then((response) => {\r\n        toast.success(response.data.message);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error.response);\r\n      });\r\n  };\r\n  const handlevalidate = (value) => {\r\n    let error = {};\r\n    if (!value.staff_email) {\r\n      error.staff_email = \"Email is required\";\r\n    }\r\n    if (!value.staff_name) {\r\n      error.staff_name = \"Name is required\";\r\n    }\r\n    if (!value.new_password) {\r\n      error.new_password = \"Password is required\";\r\n    }\r\n    if (selectedRoles.length === 0) {\r\n      error.roles = \"Please select at least one role\";\r\n    }\r\n    setError(error);\r\n    if (Object.keys(error).length === 0) {\r\n      handleapi();\r\n    }\r\n  };\r\n  const roleOptions = [\r\n    { value: \"0\", label: \"No Role Assign\" },\r\n    { value: \"1\", label: \"Quoting Team\" },\r\n    { value: \"2\", label: \"Operation controller\" },\r\n    { value: \"3\", label: \"Customs Clearing\" },\r\n    { value: \"4\", label: \"Sales Team\" },\r\n    { value: \"5\", label: \"Customer Service\" },\r\n    { value: \"6\", label: \"Shipping Controller\" },\r\n    { value: \"7\", label: \"Warehousing\" },\r\n    { value: \"8\", label: \"Accounts\" },\r\n  ];\r\n  const handleRoleChange = (event) => {\r\n    setSelectedRoles(event.target.value);\r\n  };\r\n  const handleapi = () => {\r\n    const apivali = {\r\n      staff_email: input.staff_email,\r\n      staff_name: input.staff_name,\r\n      roles: selectedRoles,\r\n      new_password: input.new_password,\r\n    };\r\n    axios\r\n      .post(`${process.env.REACT_APP_BASE_URL}add-staff`, apivali)\r\n      .then((response) => {\r\n        toast.success(response.data.message);\r\n        getdata();\r\n        setIsModalOpen(false);\r\n      })\r\n      .catch((error) => {\r\n        toast.error(error.response.data.message);\r\n      });\r\n  };\r\n  const handleclick = () => {\r\n    handlevalidate(input);\r\n  };\r\n  const handleSearch = (e) => {\r\n    setSearchQuery(e.target.value);\r\n    setCurrentPage(1);\r\n  };\r\n  const handledelete = async (id) => {\r\n    Swal.fire({\r\n      title: \"Are you sure?\",\r\n      text: \"You won't be able to revert this!\",\r\n      icon: \"warning\",\r\n      showCancelButton: true,\r\n      confirmButtonColor: \"#3085d6\",\r\n      cancelButtonColor: \"#d33\",\r\n      confirmButtonText: \"Yes, delete it!\",\r\n    }).then((result) => {\r\n      if (result.isConfirmed) {\r\n        axios\r\n          .post(`${process.env.REACT_APP_BASE_URL}delete-staff`, {\r\n            staff_id: id,\r\n          })\r\n          .then((response) => {\r\n            toast.success(response.data.message);\r\n            getdata();\r\n          })\r\n          .catch((error) => {\r\n            toast.error(error.response.data.message);\r\n          });\r\n        Swal.fire({\r\n          title: \"Deleted!\",\r\n          text: \"Your file has been deleted.\",\r\n          icon: \"success\",\r\n        });\r\n      }\r\n    });\r\n  };\r\n  const openModal = () => {\r\n    setIsModalOpen(true);\r\n  };\r\n  const closeModal = () => {\r\n    setIsModalOpen(false);\r\n  };\r\n  const handleupdateapi = (e) => {\r\n    const { name, value } = e.target;\r\n    setInputdata({ ...inputdata, [name]: value });\r\n  };\r\n  const openModal2 = (id) => {\r\n    const userlog = data.find((item) => item.id === id);\r\n    if (userlog) {\r\n      setInputdata({\r\n        staff_id: id,\r\n        staff_email: userlog.email,\r\n        staff_name: userlog.full_name,\r\n        roles: userlog.roles || [],\r\n      });\r\n    }\r\n    setIsModalOpen2(true);\r\n  };\r\n  const postData1234 = () => {\r\n    console.log(inputdata);\r\n    const apivali = {\r\n      staff_id: inputdata.staff_id,\r\n      email: inputdata.staff_email,\r\n      staff_name: inputdata.staff_name,\r\n      roles: selectedRoles,\r\n      password: inputdata.new_password,\r\n    };\r\n    if (!selectedRoles || !inputdata.new_password) {\r\n      toast.error(\"Update Roles and Password\");\r\n    } else {\r\n      axios\r\n        .post(`${process.env.REACT_APP_BASE_URL}update-staff`, apivali)\r\n        .then((response) => {\r\n          toast.success(response.data.message);\r\n          closeModal2();\r\n          getdata();\r\n          setIsModalOpen(false);\r\n        })\r\n        .catch((error) => {\r\n          toast.error(error.response.data.message);\r\n        });\r\n    }\r\n  };\r\n  const closeModal2 = () => {\r\n    setIsModalOpen2(false);\r\n  };\r\n  const handleclicknavigate = (item) => {\r\n  navigate(`/Admin/staff-details`,{state:{data:item}})\r\n  }\r\n  return (\r\n    <>\r\n      {loader ? (\r\n      <div class=\"loader-container\">\r\n        <div class=\"loader\"></div>\r\n        <p class=\"loader-text\">Updating... This may take some time</p>\r\n      </div>\r\n    ) : (\r\n      <>\r\n      <div className=\"wpWrapper\">\r\n        <div className=\"container-fluid\">\r\n          <div className=\"card\">\r\n            <div className=\"card-body\">\r\n              <div className=\"row manageFreight\">\r\n                <div className=\"col-12\">\r\n                  <div className=\"d-flex justify-content-between align-items-center\">\r\n                    <div className=\"\">\r\n                      <h4 className=\"freight_hd\">Add Staff</h4>\r\n                    </div>\r\n                    <div className=\"d-flex justify-content-end align-items-center\">\r\n                      <div className=\"\">\r\n                        <input\r\n                          className=\"px-2 py-1 rounded \"\r\n                          type=\"text\"\r\n                          placeholder=\"Search\"\r\n                          value={searchQuery}\r\n                          onChange={handleSearch}\r\n                        ></input>\r\n                      </div>\r\n                      <div className=\"ms-2\">\r\n                        <button type=\"button\" onClick={openModal}>\r\n                          Add\r\n                        </button>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              {isModalOpen && (\r\n                <div className=\"custom-modal\">\r\n                  <div className=\"custom-modal-content\">\r\n                    <div className=\"custom-modal-header\">\r\n                      <h5 className=\"custom-modal-title\">Add Staff</h5>\r\n                      <button\r\n                        type=\"button\"\r\n                        className=\"btn-close\"\r\n                        onClick={closeModal}\r\n                      />\r\n                    </div>\r\n                    <div className=\"custom-modal-body\">\r\n                      <div className=\"mb-3\">\r\n                        <label\r\n                          htmlFor=\"exampleFormControlInput1\"\r\n                          className=\"form-label mb-2 md_staff\"\r\n                        >\r\n                          Email address\r\n                        </label>\r\n                        <input\r\n                          type=\"email\"\r\n                          className=\"form-control\"\r\n                          id=\"exampleFormControlInput1\"\r\n                          placeholder=\"name@example.com\"\r\n                          onChange={handlechange}\r\n                          name=\"staff_email\"\r\n                        />\r\n                        <p className=\"text-danger\">{error.staff_email}</p>\r\n                      </div>\r\n                      <div className=\"mb-3\">\r\n                        <label\r\n                          htmlFor=\"inputText\"\r\n                          className=\"form-label mb-2 md_staff\"\r\n                        >\r\n                          Full Name\r\n                        </label>\r\n                        <div className=\"col-sm-12\">\r\n                          <input\r\n                            type=\"text\"\r\n                            onChange={handlechange}\r\n                            name=\"staff_name\"\r\n                            className=\"form-control\"\r\n                            id=\"inputText\"\r\n                            placeholder=\"Enter your Name\"\r\n                          />\r\n                          <p className=\"text-danger\">{error.staff_name}</p>\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"mb-3\">\r\n                        <label\r\n                          htmlFor=\"inputText\"\r\n                          className=\"form-label mb-2 md_staff\"\r\n                        >\r\n                          Assign Roles\r\n                        </label>\r\n                        <FormControl style={{ width: \"100%\" }}>\r\n                          <InputLabel id=\"demo-multiple-checkbox-label\">\r\n                            Assign Roles\r\n                          </InputLabel>\r\n                          <Select\r\n                            labelId=\"demo-multiple-checkbox-label\"\r\n                            id=\"demo-multiple-checkbox\"\r\n                            multiple\r\n                            value={selectedRoles}\r\n                            onChange={handleRoleChange}\r\n                            input={<OutlinedInput label=\"Assign Roles\" />}\r\n                            renderValue={(selected) =>\r\n                              selected\r\n                                .map(\r\n                                  (role) =>\r\n                                    roleOptions.find(\r\n                                      (option) => option.value === role\r\n                                    )?.label\r\n                                )\r\n                                .join(\", \")\r\n                            }\r\n                            MenuProps={MenuProps}\r\n                            className=\"country_sel\"\r\n                          >\r\n                            {roleOptions.map((option) => (\r\n                              <MenuItem key={option.value} value={option.value}>\r\n                                <Checkbox\r\n                                  checked={\r\n                                    selectedRoles.indexOf(option.value) > -1\r\n                                  }\r\n                                />\r\n                                <ListItemText primary={option.label} />\r\n                              </MenuItem>\r\n                            ))}\r\n                          </Select>\r\n                        </FormControl>\r\n                      </div>\r\n                      <div>\r\n                        <label\r\n                          htmlFor=\"inputPassword\"\r\n                          className=\"form-label mb-2 md_staff\"\r\n                        >\r\n                          New Password\r\n                        </label>\r\n                        <div className=\"col-sm-12\">\r\n                          <input\r\n                            type=\"password\"\r\n                            className=\"form-control\"\r\n                            name=\"new_password\"\r\n                            onChange={handlechange}\r\n                            id=\"inputPassword\"\r\n                            placeholder=\"password\"\r\n                          />\r\n                          <p className=\"text-danger mb-0\">\r\n                            {error.new_password}\r\n                          </p>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"custom-modal-footer\">\r\n                      <button\r\n                        type=\"button\"\r\n                        className=\"btn text-white\"\r\n                        onClick={handleclick}\r\n                        style={{ backgroundColor: \"#1b2245\" }}\r\n                      >\r\n                        Add Member\r\n                      </button>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              )}\r\n              <div className=\"table-responsive mt-2\">\r\n                <table className=\"table table-striped tableICon\">\r\n                  <thead>\r\n                    <tr>\r\n                      <th scope=\"col\">Sr.No.</th>\r\n                      <th scope=\"col\">Full Name</th>\r\n                      <th scope=\"col\">Email</th>\r\n                      <th scope=\"col\">Status</th>\r\n                      <th scope=\"col\">View</th>\r\n                      <th scope=\"col\">Action</th>\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody style={{ border: \"none\" }}>\r\n                    {currentData &&\r\n                      currentData.length > 0 &&\r\n                      currentData.map((item, index) => {\r\n                        return (\r\n                          <tr className=\"border-bottom\" key={index}>\r\n                            <th>{startIndex + index + 1}</th>\r\n                            <td>{item.full_name}</td>\r\n                            <td>{item.email}</td>\r\n                            <td>\r\n                              {item.status === 1 ? (\r\n                                <label\r\n                                  className={`switch round ${\r\n                                    isChecked ? \"checked\" : \"\"\r\n                                  }`}\r\n                                >\r\n                                  <input\r\n                                    type=\"checkbox\"\r\n                                    checked={!isChecked}\r\n                                    onClick={() => {\r\n                                      handlelcicckac(item.id);\r\n                                    }}\r\n                                    onChange={() => {\r\n                                      handleToggle(item.id);\r\n                                    }}\r\n                                  />\r\n                                  <span className=\"slider round\"></span>\r\n                                </label>\r\n                              ) : (\r\n                                <label\r\n                                  className={`switch round ${\r\n                                    isChecked ? \"checked\" : \"\"\r\n                                  }`}\r\n                                >\r\n                                  <input\r\n                                    type=\"checkbox\"\r\n                                    checked={isChecked}\r\n                                    onClick={() => {\r\n                                      handlelcicckac(item.id);\r\n                                    }}\r\n                                    onChange={() => {\r\n                                      handleToggle(item.id);\r\n                                    }}\r\n                                  />\r\n                                  <span className=\"slider round\"></span>\r\n                                </label>\r\n                              )}\r\n                            </td>\r\n                            <td>\r\n                             <fa className=\"fa fa-eye\" style={{cursor:\"pointer\"}} onClick={()=>{handleclicknavigate(item)}}></fa>\r\n                            </td>\r\n                            <td>\r\n                              <div className=\"action_btn1 d-flex align-items-center\">\r\n                                <FaEdit\r\n                                  onClick={() => {\r\n                                    openModal2(item.id);\r\n                                  }}\r\n                                  style={{\r\n                                    color: \"rgb(27 34 69)\",\r\n                                    marginRight: \"10px\",\r\n                                    width: \"20px\",\r\n                                    height: \"15px\",\r\n                                    cursor: \"pointer\",\r\n                                  }}\r\n                                />\r\n                                <AiFillDelete\r\n                                  className=\"text-danger\"\r\n                                  style={{ cursor: \"pointer\" }}\r\n                                  onClick={() => {\r\n                                    handledelete(item.id);\r\n                                  }}\r\n                                />\r\n                              </div>\r\n                            </td>\r\n                          </tr>\r\n                        );\r\n                      })}\r\n                  </tbody>\r\n                </table>\r\n                <div className=\"text-center d-flex justify-content-end align-items-center\">\r\n                  <button\r\n                    disabled={currentPage === 1}\r\n                    className=\"bg_page\"\r\n                    onClick={() => handlePageChange(currentPage - 1)}\r\n                  >\r\n                    <i class=\"fi fi-rr-angle-small-left page_icon\"></i>\r\n                  </button>\r\n                  <span className=\"mx-2\">{`Page ${currentPage} of ${totalPages}`}</span>\r\n                  <button\r\n                    disabled={currentPage === totalPages}\r\n                    className=\"bg_page\"\r\n                    onClick={() => handlePageChange(currentPage + 1)}\r\n                  >\r\n                    <i class=\"fi fi-rr-angle-small-right page_icon\"></i>\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <Modal\r\n              open={isModalOpen2}\r\n              onClose={closeModal2}\r\n              aria-labelledby=\"modal-modal-title\"\r\n              aria-describedby=\"modal-modal-description\"\r\n            >\r\n              <Box\r\n                sx={{\r\n                  position: \"absolute\",\r\n                  top: \"50%\",\r\n                  left: \"50%\",\r\n                  transform: \"translate(-50%, -50%)\",\r\n                  height: 450,\r\n                  width: 450,\r\n                  overflow: \"scroll\",\r\n                  bgcolor: \"background.paper\",\r\n                  boxShadow: 24,\r\n                  p: 4,\r\n                }}\r\n              >\r\n                <div className=\"row\">\r\n                  <div className=\"col-12\">\r\n                    <label\r\n                      htmlFor=\"exampleFormControlInput1\"\r\n                      className=\"ware_label\"\r\n                    >\r\n                      Email address\r\n                    </label>\r\n                    <input\r\n                      type=\"email\"\r\n                      className=\"form-control mb-3\"\r\n                      value={inputdata?.staff_email}\r\n                      id=\"exampleFormControlInput1\"\r\n                      placeholder=\"name@example.com\"\r\n                      onChange={handleupdateapi}\r\n                      name=\"staff_email\"\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                  <div className=\"col-12\">\r\n                    <label htmlFor=\"inputText\" className=\"ware_label\">\r\n                      Full Name\r\n                    </label>\r\n                    <input\r\n                      type=\"text\"\r\n                      onChange={handleupdateapi}\r\n                      name=\"staff_name\"\r\n                      value={inputdata?.staff_name}\r\n                      className=\"form-control mb-3\"\r\n                      id=\"inputText\"\r\n                      placeholder=\"Enter your Name\"\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"row mb-3 \">\r\n                  <div className=\"col-12\">\r\n                    <label htmlFor=\"multipleSelect\" className=\"ware_label\">\r\n                      Assign Roles\r\n                    </label>\r\n                    <br />\r\n                    <FormControl className=\"w-100\">\r\n                      <InputLabel id=\"roles-label\">Roles</InputLabel>\r\n                      <Select\r\n                        labelId=\"roles-label\"\r\n                        multiple\r\n                        value={selectedRoles}\r\n                        onChange={handleRoleChange}\r\n                        input={<OutlinedInput label=\"Roles\" />}\r\n                        renderValue={(selected) =>\r\n                          selected\r\n                            .map(\r\n                              (role) =>\r\n                                roleOptions.find(\r\n                                  (option) => option.value === role\r\n                                )?.label\r\n                            )\r\n                            .join(\", \")\r\n                        }\r\n                        MenuProps={MenuProps}\r\n                        className=\"country_sel\"\r\n                      >\r\n                        {roleOptions.map((option) => (\r\n                          <MenuItem key={option.value} value={option.value}>\r\n                            <Checkbox\r\n                              checked={selectedRoles.indexOf(option.value) > -1}\r\n                            />\r\n                            <ListItemText primary={option.label} />\r\n                          </MenuItem>\r\n                        ))}\r\n                      </Select>\r\n                    </FormControl>\r\n                    {error.roles && (\r\n                      <p className=\"text-danger mb-0\">{error.roles}</p>\r\n                    )}\r\n                  </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                  <div className=\"col-12\">\r\n                    <label htmlFor=\"inputPassword\" className=\"ware_label\">\r\n                      New Password\r\n                    </label>\r\n                    <input\r\n                      type=\"password\"\r\n                      className=\"form-control mb-3\"\r\n                      name=\"new_password\"\r\n                      onChange={handleupdateapi}\r\n                      id=\"inputPassword\"\r\n                      placeholder=\"password\"\r\n                    />\r\n                    <p className=\"text-danger mb-0\">{error.new_password}</p>\r\n                  </div>\r\n                </div>\r\n                <div className=\"text-center mt-2\">\r\n                  <Button\r\n                    variant=\"contained\"\r\n                    className=\"submit_btn\"\r\n                    onClick={postData1234}\r\n                  >\r\n                    Submit\r\n                  </Button>\r\n                </div>\r\n              </Box>\r\n            </Modal>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <ToastContainer />\r\n      </>\r\n                  )}\r\n    </>\r\n  );\r\n}\r\n"],"names":["pageSize","MenuProps","PaperProps","style","maxHeight","ITEM_HEIGHT","width","ManageStaff","isChecked","setIsChecked","useState","currentPage","setCurrentPage","inputdata","setInputdata","error","setError","loader","setLoader","selectedRoles","setSelectedRoles","isModalOpen2","setIsModalOpen2","input","setInput","staff_email","staff_name","new_password","searchQuery","setSearchQuery","isModalOpen","setIsModalOpen","data","setData","React","navigate","useNavigate","filterdata","filter","item","_item$email","_item$email$toLowerCa","_item$full_name","_item$full_name$toLow","_item$staff_name","_item$staff_name$toLo","email","toLowerCase","includes","full_name","totalPages","Math","ceil","length","startIndex","endIndex","currentData","slice","getdata","axios","get","concat","process","then","response","catch","console","log","handlePageChange","page","useEffect","handlechange","e","name","value","target","prevState","handleToggle","id","updatedData","map","status","handlelcicckac","post","user_id","toast","success","message","roleOptions","label","handleRoleChange","event","handleapi","apivali","roles","handleupdateapi","closeModal2","_jsx","_Fragment","children","_jsxs","class","className","type","placeholder","onChange","onClick","openModal","closeModal","htmlFor","FormControl","InputLabel","Select","labelId","multiple","OutlinedInput","renderValue","selected","role","_roleOptions$find","find","option","join","MenuItem","Checkbox","checked","indexOf","ListItemText","primary","handleclick","Object","keys","handlevalidate","backgroundColor","scope","border","index","cursor","state","handleclicknavigate","FaEdit","userlog","staff_id","openModal2","color","marginRight","height","AiFillDelete","async","Swal","title","text","icon","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","result","isConfirmed","handledelete","disabled","Modal","open","onClose","Box","sx","position","top","left","transform","overflow","bgcolor","boxShadow","p","_roleOptions$find2","Button","variant","postData1234","password","ToastContainer"],"sourceRoot":""}