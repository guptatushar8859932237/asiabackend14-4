{"version":3,"file":"static/js/978.78e44bfb.chunk.js","mappings":"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","sources":["pages/Changepassword.jsx"],"sourcesContent":["import axios from \"axios\";\r\nimport { useState } from \"react\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\"; // Ensure you import the CSS for toastify\r\nexport default function Changepassword() {\r\n    const currentuser = JSON?.parse(localStorage?.getItem(\"data123\"));\r\n    const [data, setData] = useState({\r\n        oldpassword: \"\",\r\n        newpassword: \"\",\r\n        confirmpassword: \"\",\r\n        id: currentuser?.id\r\n    });\r\n    const [errors, setErrors] = useState({});\r\n    const handleChange = (e) => {\r\n        const { name, value } = e.target;\r\n        setData({ ...data, [name]: value });\r\n        setErrors({ ...errors, [name]: \"\" });\r\n    };\r\n    const handleValidate = () => {\r\n        let newErrors = {};\r\n        let isValid = true;\r\n        if (!data.oldpassword) {\r\n            newErrors.oldpassword = \"Old password is required\";\r\n            isValid = false;\r\n        }\r\n        if (!data.newpassword) {\r\n            newErrors.newpassword = \"New password is required\";\r\n            isValid = false;\r\n        }\r\n        if (!data.confirmpassword) {\r\n            newErrors.confirmpassword = \"Confirm password is required\";\r\n            isValid = false;\r\n        }\r\n        if (data.newpassword !== data.confirmpassword) {\r\n            newErrors.passwordMatch = \"Passwords do not match\";\r\n            isValid = false;\r\n        }\r\n        setErrors(newErrors);\r\n        if (!isValid) {\r\n            if (newErrors.oldpassword) {\r\n                toast.error(newErrors.oldpassword);\r\n            } else if (newErrors.newpassword) {\r\n                toast.error(newErrors.newpassword);\r\n            } else if (newErrors.confirmpassword) {\r\n                toast.error(newErrors.confirmpassword);\r\n            } else if (newErrors.passwordMatch) {\r\n                toast.error(newErrors.passwordMatch);\r\n            }\r\n        }\r\n        return isValid;\r\n    };\r\n    const handleClick = () => {\r\n        if (handleValidate()) {\r\n            apiHit();\r\n        }\r\n    };\r\n    const apiHit = () => {\r\n        axios.post(`${process.env.REACT_APP_BASE_URL}change-password`, data).then((response) => {\r\n            if (response.status === 200) {\r\n                toast.success(response.data.message);\r\n                setData({\r\n                    id: currentuser?.id,\r\n                    oldpassword: \"\",\r\n                    newpassword: \"\",\r\n                    confirmpassword: \"\",\r\n                });\r\n            } else {\r\n                toast.error(response.data.message);\r\n            }\r\n        }).catch((error) => {\r\n            toast.error(error.response?.data?.message || \"An error occurred\");\r\n        });\r\n    };\r\n    return (\r\n        <>\r\n            <div className=\"wpWrapper\">\r\n                <div className=\"container-fluid\">\r\n                    <div className=\"card\">\r\n                        <div className=\"card-body\">\r\n                            <div className=\"row\">\r\n                                <div className=\"col-12\">\r\n                                    <h4 className=\"freight_hd\">Change Password</h4>\r\n                                    \r\n                                </div>\r\n                            </div>\r\n                            <div className=\"row mt-2 py-2\">\r\n                                <div className=\"col-lg-6\">\r\n                                    <div className=\"form-floating mb-3\">\r\n                                        <input\r\n                                            type=\"password\"\r\n                                            onChange={handleChange}\r\n                                            name=\"oldpassword\"\r\n                                            className={`form-control px-3 ${errors.oldpassword ? \"is-invalid\" : \"\"}`}\r\n                                            id=\"floatingInput\"\r\n                                            placeholder=\"Old Password\"\r\n                                            value={data.oldpassword}\r\n                                        />\r\n                                        <label htmlFor=\"floatingInput\" className=\"px-3\">Old Password</label>\r\n                                        {errors.oldpassword && (\r\n                                            <div className=\"invalid-feedback\">{errors.oldpassword}</div>\r\n                                        )}\r\n                                    </div>\r\n                                    <div className=\"form-floating mb-3\">\r\n                                        <input\r\n                                            type=\"password\"\r\n                                            onChange={handleChange}\r\n                                            name=\"newpassword\"\r\n                                            className={`form-control px-3 ${errors.newpassword ? \"is-invalid\" : \"\"}`}\r\n                                            id=\"floatingPassword\"\r\n                                            placeholder=\"New Password\"\r\n                                            value={data.newpassword}\r\n                                        />\r\n                                        <label htmlFor=\"floatingPassword\" className=\"px-3\">New Password</label>\r\n                                        {errors.newpassword && (\r\n                                            <div className=\"invalid-feedback\">{errors.newpassword}</div>\r\n                                        )}\r\n                                    </div>\r\n                                    <div className=\"form-floating mb-3\">\r\n                                        <input\r\n                                            type=\"password\"\r\n                                            onChange={handleChange}\r\n                                            name=\"confirmpassword\"\r\n                                            className={`form-control px-3 ${errors.confirmpassword ? \"is-invalid\" : \"\"}`}\r\n                                            id=\"floatingPassword1\"\r\n                                            placeholder=\"Confirm Password\"\r\n                                            value={data.confirmpassword}\r\n                                        />\r\n                                        <label htmlFor=\"floatingPassword1\" className=\"px-3\">Confirm Password</label>\r\n                                        {errors.confirmpassword && (\r\n                                            <div className=\"invalid-feedback\">{errors.confirmpassword}</div>\r\n                                        )}\r\n                                        {errors.passwordMatch && (\r\n                                            <div className=\"invalid-feedback\">{errors.passwordMatch}</div>\r\n                                        )}\r\n                                    </div>\r\n                                    <button\r\n                                        className=\"btn text-white mt-2\"\r\n                                        style={{ backgroundColor: \"#1b2245\" }}\r\n                                        onClick={handleClick}\r\n                                    >\r\n                                        Change Password\r\n                                    </button>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <ToastContainer />\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n"],"names":["Changepassword","_localStorage","currentuser","JSON","parse","localStorage","getItem","data","setData","useState","oldpassword","newpassword","confirmpassword","id","errors","setErrors","handleChange","e","name","value","target","apiHit","axios","post","concat","process","then","response","status","toast","success","message","error","catch","_error$response","_error$response$data","_jsx","_Fragment","children","_jsxs","className","type","onChange","placeholder","htmlFor","passwordMatch","style","backgroundColor","onClick","handleClick","handleValidate","newErrors","isValid","ToastContainer"],"sourceRoot":""}